{"version":3,"sources":["actions/types.js","actions/index.js","components/Header.js","components/Landing.js","components/blogs/BlogList.js","components/Dashboard.js","components/blogs/BlogField.js","components/blogs/formFields.js","components/blogs/BlogForm.js","components/blogs/BlogFormReview.js","components/blogs/BlogNew.js","components/blogs/BlogShow.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/blogsReducer.js","index.js"],"names":["FETCH_USER","FETCH_BLOGS","FETCH_BLOG","fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","submitBlog","values","file","history","uploadConfig","put","url","headers","imageUrl","key","push","fetchBlogs","fetchBlog","id","Header","this","props","auth","href","style","margin","to","className","marginLeft","renderContent","Component","connect","Landing","textAlign","BlogList","map","blogs","blog","_id","title","content","renderBlogs","Dashboard","BlogField","input","label","meta","error","touched","name","marginBottom","BlogForm","_","formFields","component","onSubmit","handleSubmit","onBlogSubmit","renderFields","reduxForm","validate","errors","each","form","destroyOnUnmount","BlogFormReview","state","formValues","onCancel","onClick","e","preventDefault","event","setState","target","files","onChange","onFileChange","bind","accept","renderButtons","blogForm","withRouter","BlogNew","showFormReview","BlogShow","match","params","src","renderImage","ownProps","App","path","exact","actions","combineReducers","action","mapKeys","window","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e6793e48.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';\nexport const FETCH_BLOGS = 'fetch_blogs';\nexport const FETCH_BLOG = 'fetch_blog';\n","import axios from 'axios';\nimport { FETCH_USER, FETCH_BLOGS, FETCH_BLOG } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const handleToken = token => async dispatch => {\n  const res = await axios.post('/api/stripe', token);\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const submitBlog = (values, file, history) => async dispatch => {\n  // returns key(actual file name) and url(where we suppossed tu upload this file)\n  const uploadConfig = await axios.get('/api/upload'); \n\n  await axios.put(uploadConfig.data.url, file, {\n    headers:{\n      'ContentType':file.type\n    }\n  })\n\n  const res = await axios.post('/api/blogs', {\n    ...values,imageUrl:uploadConfig.data.key\n  });\n  history.push('/blogs')\n  dispatch({ type: FETCH_BLOG, payload: res.data })\n}\n\nexport const fetchBlogs = () => async dispatch => {\n  const res = await axios.get('/api/blogs');\n\n  dispatch({ type: FETCH_BLOGS, payload: res.data });\n};\n\nexport const fetchBlog = id => async dispatch => {\n  const res = await axios.get(`/api/blogs/${id}`);\n\n  dispatch({ type: FETCH_BLOG, payload: res.data });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  renderContent() {\n    switch (this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li>\n            <a href={'/auth/google'}>Login With Google</a>\n          </li>\n        );\n      default:\n        return [\n          <li key=\"3\" style={{ margin: '0 10px' }}>\n            <Link to=\"/blogs\">My Blogs</Link>\n          </li>,\n          <li key=\"2\">\n            <a href={'/auth/logout'}>Logout</a>\n          </li>\n        ];\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"indigo\">\n        <div className=\"nav-wrapper\">\n          <Link\n            to={this.props.auth ? '/blogs' : '/'}\n            className=\"left brand-logo\"\n            style={{ marginLeft: '10px' }}\n          >\n            Blogster\n          </Link>\n          <ul className=\"right\">{this.renderContent()}</ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nconst Landing = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>\n        Blogster!\n      </h1>\n      Write private blogs\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport map from 'lodash/map';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchBlogs } from '../../actions';\n\nclass BlogList extends Component {\n  componentDidMount() {\n    this.props.fetchBlogs();\n  }\n\n  renderBlogs() {\n    return map(this.props.blogs, blog => {\n      return (\n        <div className=\"card darken-1 horizontal\" key={blog._id}>\n          <div className=\"card-stacked\">\n            <div className=\"card-content\">\n              <span className=\"card-title\">{blog.title}</span>\n              <p>{blog.content}</p>\n            </div>\n            <div className=\"card-action\">\n              <Link to={`/blogs/${blog._id}`}>Read</Link>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div>{this.renderBlogs()}</div>;\n  }\n}\n\nfunction mapStateToProps({ blogs }) {\n  return { blogs };\n}\n\nexport default connect(mapStateToProps, { fetchBlogs })(BlogList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport BlogList from './blogs/BlogList';\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <BlogList />\n      <div className=\"fixed-action-btn\">\n        <Link to=\"/blogs/new\" className=\"btn-floating btn-large red\">\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react'\n\nconst BlogField = ({ input, label, meta: { error, touched } }) => (\n  <div className={input.name}>\n    <label>{label}</label>\n    <input {...input} style={{ marginBottom: '5px' }} />\n    <div className=\"red-text\" style={{ marginBottom: '20px' }}>\n      {touched && error}\n    </div>\n  </div>\n)\n\nexport default BlogField\n","export default [\n  { label: 'Blog Title', name: 'title' },\n  { label: 'Content', name: 'content' }\n];\n","// BlogForm shows a form for a user to add input\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport BlogField from './BlogField';\nimport formFields from './formFields';\n\nclass BlogForm extends Component {\n  renderFields() {\n    return _.map(formFields, ({ label, name }) => {\n      return (\n        <Field\n          key={name}\n          component={BlogField}\n          type=\"text\"\n          label={label}\n          name={name}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.handleSubmit(this.props.onBlogSubmit)}>\n          {this.renderFields()}\n          <Link to=\"/blogs\" className=\"red btn-flat white-text\">\n            Cancel\n          </Link>\n          <button type=\"submit\" className=\"teal btn-flat right white-text\">\n            Next\n            <i className=\"material-icons right\">done</i>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n\n  _.each(formFields, ({ name }) => {\n    if (!values[name]) {\n      errors[name] = 'You must provide a value';\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'blogForm',\n  destroyOnUnmount: false\n})(BlogForm);\n","// BlogFormReview shows users their form inputs for review\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport formFields from './formFields';\nimport { withRouter } from 'react-router-dom';\nimport {submitBlog}  from '../../actions';\n\nclass BlogFormReview extends Component {\n  state = {file : null};\n\n  renderFields () {\n    const { formValues } = this.props\n    return _.map(formFields, ({ name, label }) => (\n      <div key={name}>\n        <label>{label}</label>\n        <div>{formValues[name]}</div>\n      </div>\n    ))\n  }\n\n  renderButtons () {\n    const { onCancel } = this.props\n    return (\n      <div>\n        <button\n          className=\"yellow darken-3 white-text btn-flat\"\n          onClick={onCancel}\n        >\n          Back\n        </button>\n        <button className=\"green btn-flat right white-text\">\n          Save Blog\n          <i className=\"material-icons right\">email</i>\n        </button>\n      </div>\n    )\n  }\n\n  onSubmit (e) {\n    e.preventDefault()\n    const { dispatch, history, formValues } = this.props\n    dispatch(submitBlog(formValues, this.state.file, history))\n  }\n  onFileChange(event){\n    this.setState({file:event.target.files[0]});\n  }\n  render() {\n    return (\n      <form onSubmit={e => this.onSubmit(e)}>\n        <h5>Please confirm your entries</h5>\n        {this.renderFields()}\n        <h5>Add an image</h5>\n        <input\n        onChange={this.onFileChange.bind(this)} \n        type=\"file\" \n        accept=\"image/*\" />\n        {this.renderButtons()}\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({ formValues: state.form.blogForm.values })\n\nexport default connect(mapStateToProps)(withRouter(BlogFormReview))","// BlogNew shows BlogForm and BlogFormReview\nimport React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\nimport BlogForm from './BlogForm';\nimport BlogFormReview from './BlogFormReview';\n\nclass BlogNew extends Component {\n  state = { showFormReview: false };\n\n  renderContent() {\n    if (this.state.showFormReview) {\n      return (\n        <BlogFormReview\n          onCancel={() => this.setState({ showFormReview: false })}\n        />\n      );\n    }\n\n    return (\n      <BlogForm\n        onBlogSubmit={() => this.setState({ showFormReview: true })}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'blogForm'\n})(BlogNew);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchBlog } from '../../actions';\n\nclass BlogShow extends Component {\n  componentDidMount() {\n    this.props.fetchBlog(this.props.match.params._id);\n  }\n\n  renderImage() {\n    if (this.props.blog.imageUrl) {\n      return (\n        <img\n          src={\n            'https://blog-for-everyone-33.s3.eu-west-3.amazonaws.com/' +\n            this.props.blog.imageUrl\n          }\n        />\n      );\n    }\n  }\n\n  render() {\n    if (!this.props.blog) {\n      return '';\n    }\n\n    const { title, content } = this.props.blog;\n\n    return (\n      <div>\n        <h3>{title}</h3>\n        <p>{content}</p>\n        {this.renderImage()}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ blogs }, ownProps) {\n  return { blog: blogs[ownProps.match.params._id] };\n}\n\nexport default connect(mapStateToProps, { fetchBlog })(BlogShow);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport Header from './Header';\nimport Landing from './Landing';\nimport Dashboard from './Dashboard';\nimport BlogNew from './blogs/BlogNew';\nimport BlogShow from './blogs/BlogShow';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <BrowserRouter>\n          <div>\n            <Header />\n            <Switch>\n              <Route path=\"/blogs/new\" component={BlogNew} />\n              <Route exact path=\"/blogs/:_id\" component={BlogShow} />\n              <Route path=\"/blogs\" component={Dashboard} />\n              <Route path=\"/\" component={Landing} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","import { combineReducers } from 'redux';\nimport { reducer as reduxForm } from 'redux-form';\nimport authReducer from './authReducer';\nimport blogsReducer from './blogsReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  form: reduxForm,\n  blogs: blogsReducer\n});\n","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import mapKeys from 'lodash/mapKeys';\nimport { FETCH_BLOGS, FETCH_BLOG } from '../actions/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCH_BLOG:\n      const blog = action.payload;\n      return { ...state, [blog._id]: blog };\n    case FETCH_BLOGS:\n      return { ...state, ...mapKeys(action.payload, '_id') };\n    default:\n      return state;\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nimport axios from 'axios';\nwindow.axios = axios;\n\n   const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}